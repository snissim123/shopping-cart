{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { canUseDOM } from \"../../utils\";\nimport { ModalPortal } from \"./modal-portal\";\nexport class ModalContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    if (canUseDOM()) {\n      this.el = this.document.createElement(\"div\");\n\n      if (props.containerClassName !== undefined) {\n        this.el.className = props.containerClassName;\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.el !== undefined) {\n      this.document.body.appendChild(this.el);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.el !== undefined) {\n      this.document.body.removeChild(this.el);\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          active = _a.active,\n          containerClassName = _a.containerClassName,\n          document = _a.document,\n          rest = tslib_1.__rest(_a, [\"active\", \"containerClassName\", \"document\"]);\n\n    return this.el !== undefined && active === true ? ReactDOM.createPortal(React.createElement(ModalPortal, Object.assign({\n      document: this.document\n    }, rest)), this.el) : false;\n  }\n\n  get document() {\n    return this.props.document !== undefined ? this.props.document : document;\n  }\n\n}\nModalContainer.displayName = \"Modal.Container\";","map":null,"metadata":{},"sourceType":"module"}