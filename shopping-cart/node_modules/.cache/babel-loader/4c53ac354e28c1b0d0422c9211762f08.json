{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const CONTROL_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\nexport const Control = forwardRefAs((_a, ref) => {\n  var className = _a.className,\n      expanded = _a.expanded,\n      iconLeft = _a.iconLeft,\n      iconRight = _a.iconRight,\n      loading = _a.loading,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"className\", \"expanded\", \"iconLeft\", \"iconRight\", \"loading\", \"size\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"control\", {\n      \"has-icons-left\": iconLeft,\n      \"has-icons-right\": iconRight,\n      \"is-expanded\": expanded,\n      \"is-loading\": loading,\n      [\"is-\".concat(size)]: size\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n});\nControl.displayName = \"Control\";\nControl.propTypes = {\n  expanded: PropTypes.bool,\n  iconLeft: PropTypes.bool,\n  iconRight: PropTypes.bool,\n  loading: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":null,"metadata":{},"sourceType":"module"}