{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { initialValue, ModalContext } from \"./modal-context\";\nexport class ModalPortal extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.close = () => {\n      if (this.props.onClose !== undefined) {\n        this.props.onClose();\n      }\n    };\n\n    this.handleKeydown = event => {\n      if (this.props.closeOnEsc === true && event.code === \"Escape\") {\n        this.close();\n      }\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          clipped = _this$props.clipped,\n          document = _this$props.document;\n    document.addEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n\n    if (html !== null) {\n      if (clipped === true) {\n        html.classList.add(\"is-clipped\");\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const document = this.props.document;\n    document.removeEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n\n    if (html !== null) {\n      html.classList.remove(\"is-clipped\");\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          className = _a.className,\n          closeOnBlur = _a.closeOnBlur,\n          closeOnEsc = _a.closeOnEsc,\n          innerRef = _a.innerRef,\n          onClose = _a.onClose,\n          rest = tslib_1.__rest(_a, [\"className\", \"closeOnBlur\", \"closeOnEsc\", \"innerRef\", \"onClose\"]);\n\n    return React.createElement(ModalContext.Provider, {\n      value: {\n        close: this.close,\n        closeOnBlur: closeOnBlur === true,\n        closeOnEsc: closeOnEsc === true\n      }\n    }, React.createElement(Generic, Object.assign({\n      className: classNames(\"modal\", \"is-active\", className),\n      ref: innerRef\n    }, rest)));\n  }\n\n}\nModalPortal.defaultProps = {\n  closeOnBlur: initialValue.closeOnBlur,\n  closeOnEsc: initialValue.closeOnEsc\n};\nModalPortal.displayName = \"Modal.Portal\";","map":null,"metadata":{},"sourceType":"module"}