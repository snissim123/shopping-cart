{"ast":null,"code":"import _slicedToArray from \"/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FormControl, CardHeader, CardContent, CardMedia, Container, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nconst cardStyles = makeStyles(theme => ({\n  grid: {\n    marginTop: 100,\n    paddingLeft: 60,\n    paddingRight: 60,\n    marginLeft: 20\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: 300,\n    height: 300,\n    paddingTop: 30,\n    paddingBottom: 20\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  button: {\n    backgroundColor: \"black\",\n    color: 'white',\n    width: 260,\n    height: 50,\n    marginTop: 30\n  }\n}));\n\nconst App = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const products = Object.values(data);\n  const classes = cardStyles();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n\n    fetchProducts();\n  }, []);\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, products.length, \" products found.\"), products.map(product => React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: product.sku,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"data/products/\" + product.sku + \"_1.jpg\",\n    height: \"200\",\n    width: \"137.5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, product.title, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"$\", product.price), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Add to cart\"))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/src/App.js"],"names":["React","useEffect","useState","FormControl","CardHeader","CardContent","CardMedia","Container","Typography","Card","Button","Grid","makeStyles","cardStyles","theme","grid","marginTop","paddingLeft","paddingRight","marginLeft","card","display","justifyContent","alignItems","flexDirection","width","height","paddingTop","paddingBottom","content","button","backgroundColor","color","App","data","setData","products","Object","values","classes","fetchProducts","response","fetch","json","length","map","product","sku","title","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {FormControl, CardHeader, CardContent, CardMedia, Container, Typography} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles} from '@material-ui/core/styles';\n\nconst cardStyles = makeStyles(theme => ({\n  grid: {\n    marginTop: 100,   \n    paddingLeft: 60,\n    paddingRight: 60,\n    marginLeft: 20,\n  },\n  card:{\n    display:\"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: 300,\n    height: 300,\n    paddingTop: 30,\n    paddingBottom: 20,\n  },\n  content:{\n    display:\"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  button:{\n    backgroundColor: \"black\",\n    color: 'white',\n    width: 260,\n    height: 50,\n    marginTop: 30,\n  }\n\n}));\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const products = Object.values(data);\n  const classes = cardStyles();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n    fetchProducts();\n  }, []);\n\n  return (\n\n  <Grid container spacing={3} className={classes.grid}> \n        <Typography>{products.length} products found.</Typography>      \n        {products.map(product => \n          (<Grid item xs={4}>\n            <Card key={product.sku} className={classes.card}>\n              <CardMedia><img src={\"data/products/\"+product.sku+\"_1.jpg\"} height=\"200\" width=\"137.5\"></img></CardMedia>\n              <CardContent className={classes.content}>\n                {product.title}\n                <Typography >${product.price}</Typography>\n                <Button variant=\"contained\" className={classes.button} size=\"medium\">Add to cart</Button>\n              </CardContent>\n            </Card>\n        </Grid>))}\n       </Grid>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}