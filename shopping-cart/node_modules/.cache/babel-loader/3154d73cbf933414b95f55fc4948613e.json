{"ast":null,"code":"import _slicedToArray from \"/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Column, Level } from 'rbx';\n\nconst App = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const products = Object.values(data);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n\n    fetchProducts();\n  }, []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    multiline: true,\n    gapless: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, products.map(product => React.createElement(Column, {\n    size: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Card, {\n    textAlign: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"data/products/\" + product.sku + \"_1.jpg\",\n    height: \"80\",\n    width: \"55\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    key: product.sku,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, product.title))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sandranissim/Documents/eecs397/new-shopping-cart/shopping-cart/src/App.js"],"names":["React","useEffect","useState","Card","Column","Level","App","data","setData","products","Object","values","fetchProducts","response","fetch","json","map","product","sku","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,KAApC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACTK,IADS;AAAA,QACHC,OADG;;AAEhB,QAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAjB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACO,IAAD,CAAP;AACD,KAJD;;AAKAH,IAAAA,aAAa;AACd,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,SAAS,EAAE,IAAzB;AAA+B,IAAA,OAAO,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,QAAQ,CAACO,GAAT,CAAaC,OAAO,IACrB,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAE,mBAAiBA,OAAO,CAACC,GAAzB,GAA6B,QAAvC;AAAiD,IAAA,MAAM,EAAC,IAAxD;AAA6D,IAAA,KAAK,EAAC,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,GAAG,EAAED,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,OAAO,CAACE,KAA/B,CAFF,CADF,CADC,CADD,CADF,CADF;AAcD,CA1BD;;AA4BA,eAAeb,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Column, Level } from 'rbx';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const products = Object.values(data);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n    fetchProducts();\n  }, []);\n\n  return (\n    <ul>\n      <Column.Group multiline={true} gapless={true}>\n      {products.map(product => \n      <Column size={3}>\n        <Card textAlign=\"centered\">\n          <img src={\"data/products/\"+product.sku+\"_1.jpg\"} height=\"80\" width=\"55\"></img>\n          <li key={product.sku}>{product.title}</li>\n        </Card>\n      </Column>        \n        )}\n      </Column.Group>\n    </ul>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}