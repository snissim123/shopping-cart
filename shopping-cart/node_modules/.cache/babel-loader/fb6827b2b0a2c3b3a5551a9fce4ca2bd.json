{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ModalContext } from \"./modal-context\";\n\nconst onClickHandler = (onClick, ctx) => event => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n\n  ctx.close();\n};\n\nexport const ModalClose = forwardRefAs((_a, ref) => {\n  var className = _a.className,\n      onClick = _a.onClick,\n      rest = tslib_1.__rest(_a, [\"className\", \"onClick\"]);\n\n  return React.createElement(ModalContext.Consumer, null, ctx => React.createElement(Generic, Object.assign({\n    \"aria-label\": \"close\",\n    className: classNames(\"modal-close\", \"is-large\", className),\n    onClick: onClickHandler(onClick, ctx),\n    ref: ref\n  }, rest)));\n}, {\n  as: \"button\"\n});\nModalClose.displayName = \"Modal.Close\";\nModalClose.propTypes = {\n  onClick: PropTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}