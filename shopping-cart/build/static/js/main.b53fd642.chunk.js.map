{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","ref","cardStyles","makeStyles","theme","grid","marginTop","paddingLeft","paddingRight","marginLeft","card","display","justifyContent","alignItems","flexDirection","width","height","paddingTop","paddingBottom","content","button","backgroundColor","color","cart","float","margin","drawer","flexShrink","title","weight","fontSize","textAlign","cartProducts","cartTop","removeProduct","align","App","useState","data","setData","openCart","setOpenCart","setCart","total","setTotal","products","Object","values","classes","useEffect","handleData","snap","val","on","error","alert","off","productDict","i","length","sku","cartClick","Button","className","onClick","Drawer","variant","anchor","open","paper","Typography","map","product","Container","quantity","price","src","id","cartCopy","productId","splice","removeItem","Divider","Grid","container","spacing","item","xs","Card","key","CardMedia","CardContent","found","push","addCart","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b53fd642.chunk.js","sourcesContent":["import React, { useEffect, useState, forceUpdate } from 'react';\nimport {FormControl, CardHeader, CardContent, CardMedia, Container, Typography} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyTBlA49bKh0fTIBXmdagnfO5ASSdfwDE\",\n  authDomain: \"shopping-cart-a349c.firebaseapp.com\",\n  databaseURL: \"https://shopping-cart-a349c.firebaseio.com\",\n  projectId: \"shopping-cart-a349c\",\n  storageBucket: \"shopping-cart-a349c.appspot.com\",\n  messagingSenderId: \"406377467757\",\n  appId: \"1:406377467757:web:f7f737706a997297f51464\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database().ref();\n\nconst cardStyles = makeStyles(theme => ({\n  grid: {\n    marginTop: 100,   \n    paddingLeft: 60,\n    paddingRight: 60,\n    marginLeft: 20,\n  },\n  card:{\n    display:\"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: 300,\n    height: 300,\n    paddingTop: 30,\n    paddingBottom: 20,\n  },\n  content:{\n    display:\"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  button:{\n    backgroundColor: \"black\",\n    color: 'white',\n    width: 260,\n    height: 50,\n    marginTop: 30,\n  },\n  cart: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    float: \"right\",\n    margin: 10,\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  drawer: {\n    width: 300,\n    flexShrink: 0,\n    float: \"left\",\n  },\n  title: {\n    weight: \"heavy\",\n    fontSize: 32,\n    textAlign: \"center\",\n    margin: 20\n    \n  },\n  cartProducts: {\n    float: \"left\",\n    marginTop: 20,\n  },\n  cartTop: {\n    margin: 30,\n    float: \"left\"\n  },\n  removeProduct: {\n    width: 240,\n    align: \"center\"\n  },\n\n}));\n\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [openCart, setOpenCart] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const products = Object.values(data);\n  const classes = cardStyles();\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setData(snap.val());\n    }\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n  }, []);\n\n  const productDict = {};\n  for (let i = 0; i < products.length; i += 1) {\n    productDict[products[i].sku] = products[i];\n  }\n\n  const cartClick = () => {\n    setOpenCart(!openCart);\n  };\n\n  const addCart = (id) => {\n    setOpenCart(true);\n    let cartCopy = cart;\n    let found = false;\n    for (let i=0; i<cartCopy.length; i+=1){\n      if (cartCopy[i].productId === id) {\n        cartCopy[i].quantity += 1;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      cartCopy.push({\n        productId: id,\n        quantity: 1,\n        product: productDict[id],\n      })\n    }\n    setCart(cartCopy);\n    setTotal(total + productDict[id].price);\n  };\n\n  const removeItem = (id) => {\n    let cartCopy = cart;\n    for (let i=0; i<cartCopy.length; i+=1){\n      if (cartCopy[i].productId === id) {\n        cartCopy[i].quantity -= 1;\n        if (cartCopy[i].quantity === 0) {\n          cartCopy.splice(i, 1);\n        }\n        break;\n      }\n    }\n    setCart(cartCopy);\n    setTotal(total - productDict[id].price);\n  };\n\n  return (\n  <div>\n    <Button className={classes.cart} onClick={cartClick}>Cart</Button>\n    <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={openCart}\n        classes={{\n          paper: classes.drawer,\n        }}\n      >\n        <Button onClick={cartClick}>x</Button>\n        <Typography className={classes.cartTop}><strong>Your Cart</strong></Typography>\n        <div>\n        {cart.map(product =>\n        <Container className={classes.cartProducts}>\n          <Typography><strong>{product.product.title}</strong></Typography>\n          <Typography>{product.quantity} x ${product.product.price}</Typography>\n          <img src={\"data/products/\"+product.product.sku+\"_1.jpg\"} height=\"80\" width=\"55\"></img>\n          <Button className={classes.removeProduct} onClick={() => removeItem(product.product.sku)}>x</Button>\n          <Divider/>\n        </Container>\n          )}\n          <Typography className={classes.cartTop}><strong>Cart total: ${total}</strong></Typography>\n        </div>\n        \n      </Drawer>\n    <Typography className={classes.title}>T-Shirt Store</Typography>\n    <Typography className={classes.grid}>{products.length} product(s) found.</Typography>\n    <Grid container spacing={3} className={classes.grid}>       \n          {products.map(product => \n            (<Grid item xs={4}>\n              <Card key={product.sku} className={classes.card}>\n                <CardMedia><img src={\"data/products/\"+product.sku+\"_1.jpg\"} height=\"200\" width=\"137.5\"></img></CardMedia>\n                <CardContent className={classes.content}>\n                  {product.title}\n                  <Typography >${product.price}</Typography>\n                  <Button onClick={() => addCart(product.sku)} variant=\"contained\" className={classes.button} size=\"medium\">Add to cart</Button>\n                </CardContent>\n              </Card>\n          </Grid>))}\n        </Grid>\n      </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}